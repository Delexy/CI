name: Test
on:
  push:
    tags:
      - "v[0-9]+"

jobs:
  changelog:
    name: Testing and release
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read
      issues: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      # Формирование changelog
      # Формирование информации о пользователе
      - name: Get current commit info
        run: |
          git log --name-status HEAD^..HEAD >> changelog.md
          echo "____________________________________" >> changelog.md
      # Формирование коммитов
      - name: Get current and previous tag
        run: |
          echo PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1  --max-count=1)) >> $GITHUB_ENV
          echo CUR_TAG=$(git describe --abbrev=0 --tags) >> $GITHUB_ENV
      - name: Get tags hashes
        run: |
          echo PREV_HASH=$(git show-ref -s ${{ env.PREV_TAG }}) >> $GITHUB_ENV
          echo CUR_HASH=$(git show-ref -s ${{ env.CUR_TAG }}) >> $GITHUB_ENV
      - name: Git oneline commits
        run: git log ${{ env.PREV_HASH }}..${{ env.CUR_HASH }} --oneline >> changelog.md
      - name: Get current issue
        run: echo CUR_ISSUE_NAME=$(gh issue list -S "RELEASE ${{ env.CUR_TAG }}") >> $GITHUB_ENV
      # Формирование результатов тестирования
      - name: Before tests fail
        if: ${{ failure() }}
        run: echo "\n\nПри CI проверки не прошли, посмотреть результат можно по ссылке https://github.com/Delexy/CI/actions/runs/${{ github.run_number }}/\n Там же можно найти созданные артефакты \n\n" >> changelog.md
      - name: Before tests success
        if: ${{ !failure() }}
        run: echo "\n\nПри CI проверки прошли, посмотреть результат можно по ссылке https://github.com/Delexy/CI/actions/runs/${{ github.run_number }}/\n Там же можно найти созданные артефакты \n\n" >> changelog.md
      # Формирование issue
      - name: Create issue
        if: ${{ startsWith(env.CUR_ISSUE_NAME, 'no issues match') }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh issue create --title "RELEASE ${{ env.CUR_TAG }}" --body-file ./changelog.md
      - name: Add comment to exists issue
        if: ${{ !startsWith(env.CUR_ISSUE_NAME, 'no issues match') }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh issue comment --body-file ./changelog.md
